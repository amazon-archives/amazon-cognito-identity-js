{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///amazon-cognito-identity.min.js","webpack:///webpack/bootstrap 87f23737aba8a95b0ffd","webpack:///./enhance.js","webpack:///external {\"root\":[\"AWSCognito\"],\"commonjs2\":\"aws-sdk\",\"commonjs\":\"aws-sdk\",\"amd\":\"aws-sdk\"}","webpack:///./src/AuthenticationHelper.js","webpack:///./src/BigInteger.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoUser.js","webpack:///./src/CognitoUserAttribute.js","webpack:///./src/CognitoUserSession.js","webpack:///./src/DateHelper.js","webpack:///./src/StorageHelper.js","webpack:///./src/AuthenticationDetails.js","webpack:///./src/CognitoUserPool.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","AmazonCognitoIdentity","AWSCognito","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","defineProperty","value","_src","keys","forEach","enumerable","get","_awsSdk","enhancements","CognitoIdentityServiceProvider","window","crypto","msCrypto","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","protoProps","staticProps","_BigInteger","_BigInteger2","initN","newPasswordRequiredChallengeUserAttributePrefix","AuthenticationHelper","PoolName","N","g","k","hexHash","toString","smallAValue","generateRandomSmallA","largeAValue","calculateA","infoBits","util","Buffer","poolName","hexRandom","lib","randomBytes","randomBigInt","smallABigInt","mod","randomPassword","SaltToHashDevices","verifierDevices","deviceGroupKey","username","generateRandomString","combinedString","hashedString","hash","padHex","verifierDevicesNotPadded","modPow","a","A","equals","ZERO","Error","B","UHexHash","finalU","buf","hashHex","sha256","Array","join","hexStr","ikm","salt","prk","hmac","infoBitsUpdate","buffer","concat","String","fromCharCode","slice","password","serverBValue","UValue","calculateU","usernamePassword","usernamePasswordHash","xValue","gModPowXN","intValue2","subtract","multiply","sValue","add","hkdf","computehkdf","bigInt","hashStr","indexOf","BigInteger","b","fromString","nbi","am1","x","w","j","n","v","Math","floor","int2char","BI_RM","charAt","intAt","s","BI_RC","charCodeAt","bnpCopyTo","r","t","bnpFromInt","DV","nbv","fromInt","bnpFromString","mi","sh","DB","clamp","subTo","bnpClamp","DM","bnToString","negate","d","km","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","am","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","F1","F2","d1","FV","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","bnpInvDigit","bnEquals","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","multiplyTo","bnDivide","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","reduce","montReduce","u0","montSqrTo","squareTo","montMulTo","bnModPow","bitLength","z","k1","convert","g2","sqrTo","mulTo","is1","r2","revert","dbits","BI_FP","pow","rr","vv","divide","CognitoAccessToken","_ref","arguments","undefined","AccessToken","jwtToken","payload","split","expiration","JSON","parse","base64","decode","exp","CognitoIdToken","IdToken","CognitoRefreshToken","RefreshToken","token","_AuthenticationHelper","_AuthenticationHelper2","_CognitoAccessToken","_CognitoAccessToken2","_CognitoIdToken","_CognitoIdToken2","_CognitoRefreshToken","_CognitoRefreshToken2","_CognitoUserSession","_CognitoUserSession2","_DateHelper","_DateHelper2","_CognitoUserAttribute","_CognitoUserAttribute2","_StorageHelper","_StorageHelper2","CognitoUser","data","Username","Pool","pool","Session","client","signInUserSession","authenticationFlowType","authDetails","callback","_this","authenticationHelper","getUserPoolId","dateHelper","authParameters","deviceKey","DEVICE_KEY","USERNAME","SRP_A","getLargeAValue","CHALLENGE_NAME","makeUnauthenticatedRequest","AuthFlow","ClientId","getClientId","AuthParameters","ClientMetadata","getValidationData","err","onFailure","challengeParameters","ChallengeParameters","USER_ID_FOR_SRP","SRP_B","SALT","getCachedDeviceKeyAndPassword","getPasswordAuthenticationKey","getPassword","dateNow","getNowString","signatureString","SECRET_BLOCK","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","respondToAuthChallenge","challenge","challengeCallback","errChallenge","dataChallenge","code","message","toLowerCase","clearCachedDeviceKeyAndPassword","ChallengeName","ChallengeResponses","errAuthenticate","dataAuthenticate","challengeName","userAttributes","rawRequiredAttributes","requiredAttributes","userAttributesPrefix","getNewPasswordRequiredChallengeUserAttributePrefix","substr","newPasswordRequired","authenticateUserInternal","_this2","mfaRequired","customChallenge","getDeviceResponse","getCognitoUserSession","AuthenticationResult","cacheTokens","newDeviceMetadata","NewDeviceMetadata","onSuccess","generateHashDevice","DeviceGroupKey","DeviceKey","deviceSecretVerifierConfig","Salt","getSaltDevices","PasswordVerifier","getVerifierDevices","getRandomPassword","getAccessToken","getJwtToken","DeviceSecretVerifierConfig","DeviceName","navigator","userAgent","errConfirm","dataConfirm","cacheDeviceKeyAndPassword","UserConfirmationNecessary","newPassword","requiredAttributeData","_this3","finalUserAttributes","NEW_PASSWORD","_this4","confirmationCode","forceAliasCreation","ConfirmationCode","ForceAliasCreation","answerChallenge","_this5","ANSWER","_this6","SMS_MFA_CODE","oldUserPassword","newUserPassword","isValid","PreviousPassword","ProposedPassword","mfaOptions","mfaEnabled","DeliveryMedium","AttributeName","push","MFAOptions","_this7","clearCachedTokens","attributes","UserAttributes","userData","attributeList","attribute","Name","Value","userAttribute","UserAttributeNames","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","storage","getStorage","getItem","idToken","accessToken","refreshToken","sessionData","cachedSession","getToken","refreshSession","_this8","REFRESH_TOKEN","lastUserKey","deviceKeyKey","authResult","authenticationResult","setItem","getIdToken","getRefreshToken","randomPasswordKey","deviceGroupKeyKey","removeItem","inputVerificationCode","Password","attributeName","Code","_this9","forgetSpecificDevice","result","DeviceRememberedStatus","limit","paginationToken","Limit","PaginationToken","_this10","CognitoUserAttribute","name","stringify","CognitoUserSession","now","Date","getExpiration","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dataMemory","MemoryStorage","StorageHelper","storageWindow","localStorage","exception","AuthenticationDetails","ValidationData","validationData","_CognitoUser","_CognitoUser2","CognitoUserPool","UserPoolId","test","region","userPoolId","clientId","apiVersion","cognitoUser","returnData","user","userConfirmed","UserConfirmed","lastAuthUser","_AuthenticationDetails","_CognitoUserPool"],"mappings":"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","file":"amazon-cognito-identity.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"aws-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory(require(\"aws-sdk\"));\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory(root[\"AWSCognito\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"aws-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory(require(\"aws-sdk\"));\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory(root[\"AWSCognito\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(14);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tObject.keys(enhancements).forEach(function (key) {\n\t  _awsSdk.CognitoIdentityServiceProvider[key] = enhancements[key];\n\t});\n\t\n\t// The version of crypto-browserify included by aws-sdk only\n\t// checks for window.crypto, not window.msCrypto as used by\n\t// IE 11 – so we set it explicitly here\n\tif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n\t  window.crypto = window.msCrypto;\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tvar _BigInteger = __webpack_require__(3);\n\t\n\tvar _BigInteger2 = _interopRequireDefault(_BigInteger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n\t\n\tvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\t\n\t/** @class */\n\t\n\tvar AuthenticationHelper = function () {\n\t  /**\n\t   * Constructs a new AuthenticationHelper object\n\t   * @param {string} PoolName Cognito user pool name.\n\t   */\n\t  function AuthenticationHelper(PoolName) {\n\t    _classCallCheck(this, AuthenticationHelper);\n\t\n\t    this.N = new _BigInteger2.default(initN, 16);\n\t    this.g = new _BigInteger2.default('2', 16);\n\t    this.k = new _BigInteger2.default(this.hexHash('00' + this.N.toString(16) + '0' + this.g.toString(16)), 16);\n\t\n\t    this.smallAValue = this.generateRandomSmallA();\n\t    this.largeAValue = this.calculateA(this.smallAValue);\n\t\n\t    this.infoBits = new _awsSdk.util.Buffer('Caldera Derived Key', 'utf8');\n\t\n\t    this.poolName = PoolName;\n\t  }\n\t\n\t  /**\n\t   * @returns {BigInteger} small A, a random number\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationHelper, [{\n\t    key: 'getSmallAValue',\n\t    value: function getSmallAValue() {\n\t      return this.smallAValue;\n\t    }\n\t\n\t    /**\n\t     * @returns {BigInteger} large A, a value generated from small A\n\t     */\n\t\n\t  }, {\n\t    key: 'getLargeAValue',\n\t    value: function getLargeAValue() {\n\t      return this.largeAValue;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random big integer\n\t     * @returns {BigInteger} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomSmallA',\n\t    value: function generateRandomSmallA() {\n\t      var hexRandom = _awsSdk.util.crypto.lib.randomBytes(128).toString('hex');\n\t\n\t      var randomBigInt = new _BigInteger2.default(hexRandom, 16);\n\t      var smallABigInt = randomBigInt.mod(this.N);\n\t\n\t      return smallABigInt;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random string\n\t     * @returns {string} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString() {\n\t      return _awsSdk.util.crypto.lib.randomBytes(40).toString('base64');\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in password hash.\n\t     */\n\t\n\t  }, {\n\t    key: 'getRandomPassword',\n\t    value: function getRandomPassword() {\n\t      return this.randomPassword;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in devices hash.\n\t     */\n\t\n\t  }, {\n\t    key: 'getSaltDevices',\n\t    value: function getSaltDevices() {\n\t      return this.SaltToHashDevices;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Value used to verify devices.\n\t     */\n\t\n\t  }, {\n\t    key: 'getVerifierDevices',\n\t    value: function getVerifierDevices() {\n\t      return this.verifierDevices;\n\t    }\n\t\n\t    /**\n\t     * Generate salts and compute verifier.\n\t     * @param {string} deviceGroupKey Devices to generate verifier for.\n\t     * @param {string} username User to generate verifier for.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'generateHashDevice',\n\t    value: function generateHashDevice(deviceGroupKey, username) {\n\t      this.randomPassword = this.generateRandomString();\n\t      var combinedString = '' + deviceGroupKey + username + ':' + this.randomPassword;\n\t      var hashedString = this.hash(combinedString);\n\t\n\t      var hexRandom = _awsSdk.util.crypto.lib.randomBytes(16).toString('hex');\n\t      this.SaltToHashDevices = this.padHex(new _BigInteger2.default(hexRandom, 16));\n\t\n\t      var verifierDevicesNotPadded = this.g.modPow(new _BigInteger2.default(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N);\n\t\n\t      this.verifierDevices = this.padHex(verifierDevicesNotPadded);\n\t    }\n\t\n\t    /**\n\t     * Calculate the client's public value A = g^a%N\n\t     * with the generated random number a\n\t     * @param {BigInteger} a Randomly generated small A.\n\t     * @returns {BigInteger} Computed large A.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateA',\n\t    value: function calculateA(a) {\n\t      var A = this.g.modPow(a, this.N);\n\t\n\t      if (A.mod(this.N).equals(_BigInteger2.default.ZERO)) {\n\t        throw new Error('Illegal paramater. A mod N cannot be 0.');\n\t      }\n\t      return A;\n\t    }\n\t\n\t    /**\n\t     * Calculate the client's value U which is the hash of A and B\n\t     * @param {BigInteger} A Large A value.\n\t     * @param {BigInteger} B Server B value.\n\t     * @returns {BigInteger} Computed U value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateU',\n\t    value: function calculateU(A, B) {\n\t      this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n\t      var finalU = new _BigInteger2.default(this.UHexHash, 16);\n\t\n\t      return finalU;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a bitArray\n\t     * @param {Buffer} buf Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'hash',\n\t    value: function hash(buf) {\n\t      var hashHex = _awsSdk.util.crypto.sha256(buf, 'hex');\n\t      return new Array(64 - hashHex.length).join('0') + hashHex;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a hex string\n\t     * @param {String} hexStr Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'hexHash',\n\t    value: function hexHash(hexStr) {\n\t      return this.hash(new _awsSdk.util.Buffer(hexStr, 'hex'));\n\t    }\n\t\n\t    /**\n\t     * Standard hkdf algorithm\n\t     * @param {Buffer} ikm Input key material.\n\t     * @param {Buffer} salt Salt value.\n\t     * @returns {Buffer} Strong key material.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'computehkdf',\n\t    value: function computehkdf(ikm, salt) {\n\t      var prk = _awsSdk.util.crypto.hmac(salt, ikm, 'buffer', 'sha256');\n\t      var infoBitsUpdate = _awsSdk.util.buffer.concat([this.infoBits, new _awsSdk.util.Buffer(String.fromCharCode(1), 'utf8')]);\n\t      var hmac = _awsSdk.util.crypto.hmac(prk, infoBitsUpdate, 'buffer', 'sha256');\n\t      return hmac.slice(0, 16);\n\t    }\n\t\n\t    /**\n\t     * Calculates the final hkdf based on computed S value, and computed U value and the key\n\t     * @param {String} username Username.\n\t     * @param {String} password Password.\n\t     * @param {BigInteger} serverBValue Server B value.\n\t     * @param {BigInteger} salt Generated salt.\n\t     * @returns {Buffer} Computed HKDF value.\n\t     */\n\t\n\t  }, {\n\t    key: 'getPasswordAuthenticationKey',\n\t    value: function getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n\t      if (serverBValue.mod(this.N).equals(_BigInteger2.default.ZERO)) {\n\t        throw new Error('B cannot be zero.');\n\t      }\n\t\n\t      this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\t\n\t      if (this.UValue.equals(_BigInteger2.default.ZERO)) {\n\t        throw new Error('U cannot be zero.');\n\t      }\n\t\n\t      var usernamePassword = '' + this.poolName + username + ':' + password;\n\t      var usernamePasswordHash = this.hash(usernamePassword);\n\t\n\t      var xValue = new _BigInteger2.default(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n\t\n\t      var gModPowXN = this.g.modPow(xValue, this.N);\n\t      var intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n\t      var sValue = intValue2.modPow(this.smallAValue.add(this.UValue.multiply(xValue)), this.N).mod(this.N);\n\t\n\t      var hkdf = this.computehkdf(new _awsSdk.util.Buffer(this.padHex(sValue), 'hex'), new _awsSdk.util.Buffer(this.padHex(this.UHexHash), 'hex'));\n\t\n\t      return hkdf;\n\t    }\n\t\n\t    /**\n\t    * Return constant newPasswordRequiredChallengeUserAttributePrefix\n\t    * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n\t    */\n\t\n\t  }, {\n\t    key: 'getNewPasswordRequiredChallengeUserAttributePrefix',\n\t    value: function getNewPasswordRequiredChallengeUserAttributePrefix() {\n\t      return newPasswordRequiredChallengeUserAttributePrefix;\n\t    }\n\t\n\t    /**\n\t     * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n\t     * @param {BigInteger|String} Number or string to pad.\n\t     * @returns {String} Padded hex string.\n\t     */\n\t\n\t  }, {\n\t    key: 'padHex',\n\t    value: function padHex(bigInt) {\n\t      var hashStr = bigInt.toString(16);\n\t      if (hashStr.length % 2 === 1) {\n\t        hashStr = '0' + hashStr;\n\t      } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\n\t        hashStr = '00' + hashStr;\n\t      }\n\t      return hashStr;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationHelper;\n\t}();\n\t\n\texports.default = AuthenticationHelper;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n\t//\n\t// All public methods have been removed except the following:\n\t//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n\t//   toString (only radix 2, 4, 8, 16 and 32 supported)\n\t//   negate\n\t//   abs\n\t//   compareTo\n\t//   bitLength\n\t//   mod\n\t//   equals\n\t//   add\n\t//   subtract\n\t//   multiply\n\t//   divide\n\t//   modPow\n\t\n\texports.default = BigInteger;\n\t\n\t/*\n\t * Copyright (c) 2003-2005  Tom Wu\n\t * All Rights Reserved.\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * \"Software\"), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n\t * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\t *\n\t * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n\t * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n\t * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n\t * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n\t * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t *\n\t * In addition, the following condition applies:\n\t *\n\t * All redistributions must retain an intact copy of this copyright notice\n\t * and disclaimer.\n\t */\n\t\n\t// (public) Constructor\n\t\n\tfunction BigInteger(a, b) {\n\t  if (a != null) this.fromString(a, b);\n\t}\n\t\n\t// return new, unset BigInteger\n\tfunction nbi() {\n\t  return new BigInteger(null);\n\t}\n\t\n\t// am: Compute w_j += (x*this_i), propagate carries,\n\t// c is initial carry, returns final carry.\n\t// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n\t// We need to select the fastest one that works in this environment.\n\t// am1: use a single mult and divide to get the high bits,\n\t// max digit bits should be 26 because\n\t// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\tfunction am1(i, x, w, j, c, n) {\n\t  while (--n >= 0) {\n\t    var v = x * this[i++] + w[j] + c;\n\t    c = Math.floor(v / 0x4000000);\n\t    w[j++] = v & 0x3ffffff;\n\t  }\n\t  return c;\n\t}\n\t\n\tBigInteger.prototype.am = am1;\n\t\n\t// Bits per digit\n\tvar dbits = 26;\n\t\n\tBigInteger.prototype.DB = dbits;\n\tBigInteger.prototype.DM = (1 << dbits) - 1;\n\tBigInteger.prototype.DV = 1 << dbits;\n\t\n\tvar BI_FP = 52;\n\tBigInteger.prototype.FV = Math.pow(2, BI_FP);\n\tBigInteger.prototype.F1 = BI_FP - dbits;\n\tBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\t\n\t// Digit conversions\n\tvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n\tvar BI_RC = new Array();\n\tvar rr, vv;\n\trr = \"0\".charCodeAt(0);\n\tfor (vv = 0; vv <= 9; ++vv) {\n\t  BI_RC[rr++] = vv;\n\t}rr = \"a\".charCodeAt(0);\n\tfor (vv = 10; vv < 36; ++vv) {\n\t  BI_RC[rr++] = vv;\n\t}rr = \"A\".charCodeAt(0);\n\tfor (vv = 10; vv < 36; ++vv) {\n\t  BI_RC[rr++] = vv;\n\t}function int2char(n) {\n\t  return BI_RM.charAt(n);\n\t}\n\tfunction intAt(s, i) {\n\t  var c = BI_RC[s.charCodeAt(i)];\n\t  return c == null ? -1 : c;\n\t}\n\t\n\t// (protected) copy this to r\n\tfunction bnpCopyTo(r) {\n\t  for (var i = this.t - 1; i >= 0; --i) {\n\t    r[i] = this[i];\n\t  }r.t = this.t;\n\t  r.s = this.s;\n\t}\n\t\n\t// (protected) set from integer value x, -DV <= x < DV\n\tfunction bnpFromInt(x) {\n\t  this.t = 1;\n\t  this.s = x < 0 ? -1 : 0;\n\t  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n\t}\n\t\n\t// return bigint initialized to value\n\tfunction nbv(i) {\n\t  var r = nbi();\n\t\n\t  r.fromInt(i);\n\t\n\t  return r;\n\t}\n\t\n\t// (protected) set from string and radix\n\tfunction bnpFromString(s, b) {\n\t  var k;\n\t  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n\t  this.t = 0;\n\t  this.s = 0;\n\t  var i = s.length,\n\t      mi = false,\n\t      sh = 0;\n\t  while (--i >= 0) {\n\t    var x = intAt(s, i);\n\t    if (x < 0) {\n\t      if (s.charAt(i) == \"-\") mi = true;\n\t      continue;\n\t    }\n\t    mi = false;\n\t    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n\t      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n\t      this[this.t++] = x >> this.DB - sh;\n\t    } else this[this.t - 1] |= x << sh;\n\t    sh += k;\n\t    if (sh >= this.DB) sh -= this.DB;\n\t  }\n\t  this.clamp();\n\t  if (mi) BigInteger.ZERO.subTo(this, this);\n\t}\n\t\n\t// (protected) clamp off excess high words\n\tfunction bnpClamp() {\n\t  var c = this.s & this.DM;\n\t  while (this.t > 0 && this[this.t - 1] == c) {\n\t    --this.t;\n\t  }\n\t}\n\t\n\t// (public) return string representation in given radix\n\tfunction bnToString(b) {\n\t  if (this.s < 0) return \"-\" + this.negate().toString();\n\t  var k;\n\t  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n\t  var km = (1 << k) - 1,\n\t      d,\n\t      m = false,\n\t      r = \"\",\n\t      i = this.t;\n\t  var p = this.DB - i * this.DB % k;\n\t  if (i-- > 0) {\n\t    if (p < this.DB && (d = this[i] >> p) > 0) {\n\t      m = true;\n\t      r = int2char(d);\n\t    }\n\t    while (i >= 0) {\n\t      if (p < k) {\n\t        d = (this[i] & (1 << p) - 1) << k - p;\n\t        d |= this[--i] >> (p += this.DB - k);\n\t      } else {\n\t        d = this[i] >> (p -= k) & km;\n\t        if (p <= 0) {\n\t          p += this.DB;\n\t          --i;\n\t        }\n\t      }\n\t      if (d > 0) m = true;\n\t      if (m) r += int2char(d);\n\t    }\n\t  }\n\t  return m ? r : \"0\";\n\t}\n\t\n\t// (public) -this\n\tfunction bnNegate() {\n\t  var r = nbi();\n\t\n\t  BigInteger.ZERO.subTo(this, r);\n\t\n\t  return r;\n\t}\n\t\n\t// (public) |this|\n\tfunction bnAbs() {\n\t  return this.s < 0 ? this.negate() : this;\n\t}\n\t\n\t// (public) return + if this > a, - if this < a, 0 if equal\n\tfunction bnCompareTo(a) {\n\t  var r = this.s - a.s;\n\t  if (r != 0) return r;\n\t  var i = this.t;\n\t  r = i - a.t;\n\t  if (r != 0) return this.s < 0 ? -r : r;\n\t  while (--i >= 0) {\n\t    if ((r = this[i] - a[i]) != 0) return r;\n\t  }return 0;\n\t}\n\t\n\t// returns bit length of the integer x\n\tfunction nbits(x) {\n\t  var r = 1,\n\t      t;\n\t  if ((t = x >>> 16) != 0) {\n\t    x = t;\n\t    r += 16;\n\t  }\n\t  if ((t = x >> 8) != 0) {\n\t    x = t;\n\t    r += 8;\n\t  }\n\t  if ((t = x >> 4) != 0) {\n\t    x = t;\n\t    r += 4;\n\t  }\n\t  if ((t = x >> 2) != 0) {\n\t    x = t;\n\t    r += 2;\n\t  }\n\t  if ((t = x >> 1) != 0) {\n\t    x = t;\n\t    r += 1;\n\t  }\n\t  return r;\n\t}\n\t\n\t// (public) return the number of bits in \"this\"\n\tfunction bnBitLength() {\n\t  if (this.t <= 0) return 0;\n\t  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n\t}\n\t\n\t// (protected) r = this << n*DB\n\tfunction bnpDLShiftTo(n, r) {\n\t  var i;\n\t  for (i = this.t - 1; i >= 0; --i) {\n\t    r[i + n] = this[i];\n\t  }for (i = n - 1; i >= 0; --i) {\n\t    r[i] = 0;\n\t  }r.t = this.t + n;\n\t  r.s = this.s;\n\t}\n\t\n\t// (protected) r = this >> n*DB\n\tfunction bnpDRShiftTo(n, r) {\n\t  for (var i = n; i < this.t; ++i) {\n\t    r[i - n] = this[i];\n\t  }r.t = Math.max(this.t - n, 0);\n\t  r.s = this.s;\n\t}\n\t\n\t// (protected) r = this << n\n\tfunction bnpLShiftTo(n, r) {\n\t  var bs = n % this.DB;\n\t  var cbs = this.DB - bs;\n\t  var bm = (1 << cbs) - 1;\n\t  var ds = Math.floor(n / this.DB),\n\t      c = this.s << bs & this.DM,\n\t      i;\n\t  for (i = this.t - 1; i >= 0; --i) {\n\t    r[i + ds + 1] = this[i] >> cbs | c;\n\t    c = (this[i] & bm) << bs;\n\t  }\n\t  for (i = ds - 1; i >= 0; --i) {\n\t    r[i] = 0;\n\t  }r[ds] = c;\n\t  r.t = this.t + ds + 1;\n\t  r.s = this.s;\n\t  r.clamp();\n\t}\n\t\n\t// (protected) r = this >> n\n\tfunction bnpRShiftTo(n, r) {\n\t  r.s = this.s;\n\t  var ds = Math.floor(n / this.DB);\n\t  if (ds >= this.t) {\n\t    r.t = 0;\n\t    return;\n\t  }\n\t  var bs = n % this.DB;\n\t  var cbs = this.DB - bs;\n\t  var bm = (1 << bs) - 1;\n\t  r[0] = this[ds] >> bs;\n\t  for (var i = ds + 1; i < this.t; ++i) {\n\t    r[i - ds - 1] |= (this[i] & bm) << cbs;\n\t    r[i - ds] = this[i] >> bs;\n\t  }\n\t  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n\t  r.t = this.t - ds;\n\t  r.clamp();\n\t}\n\t\n\t// (protected) r = this - a\n\tfunction bnpSubTo(a, r) {\n\t  var i = 0,\n\t      c = 0,\n\t      m = Math.min(a.t, this.t);\n\t  while (i < m) {\n\t    c += this[i] - a[i];\n\t    r[i++] = c & this.DM;\n\t    c >>= this.DB;\n\t  }\n\t  if (a.t < this.t) {\n\t    c -= a.s;\n\t    while (i < this.t) {\n\t      c += this[i];\n\t      r[i++] = c & this.DM;\n\t      c >>= this.DB;\n\t    }\n\t    c += this.s;\n\t  } else {\n\t    c += this.s;\n\t    while (i < a.t) {\n\t      c -= a[i];\n\t      r[i++] = c & this.DM;\n\t      c >>= this.DB;\n\t    }\n\t    c -= a.s;\n\t  }\n\t  r.s = c < 0 ? -1 : 0;\n\t  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n\t  r.t = i;\n\t  r.clamp();\n\t}\n\t\n\t// (protected) r = this * a, r != this,a (HAC 14.12)\n\t// \"this\" should be the larger one if appropriate.\n\tfunction bnpMultiplyTo(a, r) {\n\t  var x = this.abs(),\n\t      y = a.abs();\n\t  var i = x.t;\n\t  r.t = i + y.t;\n\t  while (--i >= 0) {\n\t    r[i] = 0;\n\t  }for (i = 0; i < y.t; ++i) {\n\t    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n\t  }r.s = 0;\n\t  r.clamp();\n\t  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n\t}\n\t\n\t// (protected) r = this^2, r != this (HAC 14.16)\n\tfunction bnpSquareTo(r) {\n\t  var x = this.abs();\n\t  var i = r.t = 2 * x.t;\n\t  while (--i >= 0) {\n\t    r[i] = 0;\n\t  }for (i = 0; i < x.t - 1; ++i) {\n\t    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n\t    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n\t      r[i + x.t] -= x.DV;\n\t      r[i + x.t + 1] = 1;\n\t    }\n\t  }\n\t  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n\t  r.s = 0;\n\t  r.clamp();\n\t}\n\t\n\t// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n\t// r != q, this != m.  q or r may be null.\n\tfunction bnpDivRemTo(m, q, r) {\n\t  var pm = m.abs();\n\t  if (pm.t <= 0) return;\n\t  var pt = this.abs();\n\t  if (pt.t < pm.t) {\n\t    if (q != null) q.fromInt(0);\n\t    if (r != null) this.copyTo(r);\n\t    return;\n\t  }\n\t  if (r == null) r = nbi();\n\t  var y = nbi(),\n\t      ts = this.s,\n\t      ms = m.s;\n\t  var nsh = this.DB - nbits(pm[pm.t - 1]);\n\t  // normalize modulus\n\t  if (nsh > 0) {\n\t    pm.lShiftTo(nsh, y);\n\t    pt.lShiftTo(nsh, r);\n\t  } else {\n\t    pm.copyTo(y);\n\t    pt.copyTo(r);\n\t  }\n\t  var ys = y.t;\n\t  var y0 = y[ys - 1];\n\t  if (y0 == 0) return;\n\t  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n\t  var d1 = this.FV / yt,\n\t      d2 = (1 << this.F1) / yt,\n\t      e = 1 << this.F2;\n\t  var i = r.t,\n\t      j = i - ys,\n\t      t = q == null ? nbi() : q;\n\t  y.dlShiftTo(j, t);\n\t  if (r.compareTo(t) >= 0) {\n\t    r[r.t++] = 1;\n\t    r.subTo(t, r);\n\t  }\n\t  BigInteger.ONE.dlShiftTo(ys, t);\n\t  t.subTo(y, y);\n\t  // \"negative\" y so we can replace sub with am later\n\t  while (y.t < ys) {\n\t    y[y.t++] = 0;\n\t  }while (--j >= 0) {\n\t    // Estimate quotient digit\n\t    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\t    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n\t      // Try it out\n\t      y.dlShiftTo(j, t);\n\t      r.subTo(t, r);\n\t      while (r[i] < --qd) {\n\t        r.subTo(t, r);\n\t      }\n\t    }\n\t  }\n\t  if (q != null) {\n\t    r.drShiftTo(ys, q);\n\t    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n\t  }\n\t  r.t = ys;\n\t  r.clamp();\n\t  if (nsh > 0) r.rShiftTo(nsh, r);\n\t  // Denormalize remainder\n\t  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n\t}\n\t\n\t// (public) this mod a\n\tfunction bnMod(a) {\n\t  var r = nbi();\n\t  this.abs().divRemTo(a, null, r);\n\t  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n\t  return r;\n\t}\n\t\n\t// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n\t// justification:\n\t//         xy == 1 (mod m)\n\t//         xy =  1+km\n\t//   xy(2-xy) = (1+km)(1-km)\n\t// x[y(2-xy)] = 1-k^2m^2\n\t// x[y(2-xy)] == 1 (mod m^2)\n\t// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n\t// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n\t// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\tfunction bnpInvDigit() {\n\t  if (this.t < 1) return 0;\n\t  var x = this[0];\n\t  if ((x & 1) == 0) return 0;\n\t  var y = x & 3;\n\t  // y == 1/x mod 2^2\n\t  y = y * (2 - (x & 0xf) * y) & 0xf;\n\t  // y == 1/x mod 2^4\n\t  y = y * (2 - (x & 0xff) * y) & 0xff;\n\t  // y == 1/x mod 2^8\n\t  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;\n\t  // y == 1/x mod 2^16\n\t  // last step - calculate inverse mod DV directly;\n\t  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\t  y = y * (2 - x * y % this.DV) % this.DV;\n\t  // y == 1/x mod 2^dbits\n\t  // we really want the negative inverse, and -DV < y < DV\n\t  return y > 0 ? this.DV - y : -y;\n\t}\n\t\n\tfunction bnEquals(a) {\n\t  return this.compareTo(a) == 0;\n\t}\n\t\n\t// (protected) r = this + a\n\tfunction bnpAddTo(a, r) {\n\t  var i = 0,\n\t      c = 0,\n\t      m = Math.min(a.t, this.t);\n\t  while (i < m) {\n\t    c += this[i] + a[i];\n\t    r[i++] = c & this.DM;\n\t    c >>= this.DB;\n\t  }\n\t  if (a.t < this.t) {\n\t    c += a.s;\n\t    while (i < this.t) {\n\t      c += this[i];\n\t      r[i++] = c & this.DM;\n\t      c >>= this.DB;\n\t    }\n\t    c += this.s;\n\t  } else {\n\t    c += this.s;\n\t    while (i < a.t) {\n\t      c += a[i];\n\t      r[i++] = c & this.DM;\n\t      c >>= this.DB;\n\t    }\n\t    c += a.s;\n\t  }\n\t  r.s = c < 0 ? -1 : 0;\n\t  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n\t  r.t = i;\n\t  r.clamp();\n\t}\n\t\n\t// (public) this + a\n\tfunction bnAdd(a) {\n\t  var r = nbi();\n\t\n\t  this.addTo(a, r);\n\t\n\t  return r;\n\t}\n\t\n\t// (public) this - a\n\tfunction bnSubtract(a) {\n\t  var r = nbi();\n\t\n\t  this.subTo(a, r);\n\t\n\t  return r;\n\t}\n\t\n\t// (public) this * a\n\tfunction bnMultiply(a) {\n\t  var r = nbi();\n\t\n\t  this.multiplyTo(a, r);\n\t\n\t  return r;\n\t}\n\t\n\t// (public) this / a\n\tfunction bnDivide(a) {\n\t  var r = nbi();\n\t\n\t  this.divRemTo(a, r, null);\n\t\n\t  return r;\n\t}\n\t\n\t// Montgomery reduction\n\tfunction Montgomery(m) {\n\t  this.m = m;\n\t  this.mp = m.invDigit();\n\t  this.mpl = this.mp & 0x7fff;\n\t  this.mph = this.mp >> 15;\n\t  this.um = (1 << m.DB - 15) - 1;\n\t  this.mt2 = 2 * m.t;\n\t}\n\t\n\t// xR mod m\n\tfunction montConvert(x) {\n\t  var r = nbi();\n\t  x.abs().dlShiftTo(this.m.t, r);\n\t  r.divRemTo(this.m, null, r);\n\t  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n\t  return r;\n\t}\n\t\n\t// x/R mod m\n\tfunction montRevert(x) {\n\t  var r = nbi();\n\t  x.copyTo(r);\n\t  this.reduce(r);\n\t  return r;\n\t}\n\t\n\t// x = x/R mod m (HAC 14.32)\n\tfunction montReduce(x) {\n\t  while (x.t <= this.mt2) {\n\t    // pad x so am has enough room later\n\t    x[x.t++] = 0;\n\t  }for (var i = 0; i < this.m.t; ++i) {\n\t    // faster way of calculating u0 = x[i]*mp mod DV\n\t    var j = x[i] & 0x7fff;\n\t    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n\t    // use am to combine the multiply-shift-add into one call\n\t    j = i + this.m.t;\n\t    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n\t    // propagate carry\n\t    while (x[j] >= x.DV) {\n\t      x[j] -= x.DV;\n\t      x[++j]++;\n\t    }\n\t  }\n\t  x.clamp();\n\t  x.drShiftTo(this.m.t, x);\n\t  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n\t}\n\t\n\t// r = \"x^2/R mod m\"; x != r\n\tfunction montSqrTo(x, r) {\n\t  x.squareTo(r);\n\t\n\t  this.reduce(r);\n\t}\n\t\n\t// r = \"xy/R mod m\"; x,y != r\n\tfunction montMulTo(x, y, r) {\n\t  x.multiplyTo(y, r);\n\t\n\t  this.reduce(r);\n\t}\n\t\n\tMontgomery.prototype.convert = montConvert;\n\tMontgomery.prototype.revert = montRevert;\n\tMontgomery.prototype.reduce = montReduce;\n\tMontgomery.prototype.mulTo = montMulTo;\n\tMontgomery.prototype.sqrTo = montSqrTo;\n\t\n\t// (public) this^e % m (HAC 14.85)\n\tfunction bnModPow(e, m) {\n\t  var i = e.bitLength(),\n\t      k,\n\t      r = nbv(1),\n\t      z = new Montgomery(m);\n\t  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n\t\n\t  // precomputation\n\t  var g = new Array(),\n\t      n = 3,\n\t      k1 = k - 1,\n\t      km = (1 << k) - 1;\n\t  g[1] = z.convert(this);\n\t  if (k > 1) {\n\t    var g2 = nbi();\n\t    z.sqrTo(g[1], g2);\n\t    while (n <= km) {\n\t      g[n] = nbi();\n\t      z.mulTo(g2, g[n - 2], g[n]);\n\t      n += 2;\n\t    }\n\t  }\n\t\n\t  var j = e.t - 1,\n\t      w,\n\t      is1 = true,\n\t      r2 = nbi(),\n\t      t;\n\t  i = nbits(e[j]) - 1;\n\t  while (j >= 0) {\n\t    if (i >= k1) w = e[j] >> i - k1 & km;else {\n\t      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n\t      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n\t    }\n\t\n\t    n = k;\n\t    while ((w & 1) == 0) {\n\t      w >>= 1;\n\t      --n;\n\t    }\n\t    if ((i -= n) < 0) {\n\t      i += this.DB;\n\t      --j;\n\t    }\n\t    if (is1) {\n\t      // ret == 1, don't bother squaring or multiplying it\n\t      g[w].copyTo(r);\n\t      is1 = false;\n\t    } else {\n\t      while (n > 1) {\n\t        z.sqrTo(r, r2);\n\t        z.sqrTo(r2, r);\n\t        n -= 2;\n\t      }\n\t      if (n > 0) z.sqrTo(r, r2);else {\n\t        t = r;\n\t        r = r2;\n\t        r2 = t;\n\t      }\n\t      z.mulTo(r2, g[w], r);\n\t    }\n\t\n\t    while (j >= 0 && (e[j] & 1 << i) == 0) {\n\t      z.sqrTo(r, r2);\n\t      t = r;\n\t      r = r2;\n\t      r2 = t;\n\t      if (--i < 0) {\n\t        i = this.DB - 1;\n\t        --j;\n\t      }\n\t    }\n\t  }\n\t  return z.revert(r);\n\t}\n\t\n\t// protected\n\tBigInteger.prototype.copyTo = bnpCopyTo;\n\tBigInteger.prototype.fromInt = bnpFromInt;\n\tBigInteger.prototype.fromString = bnpFromString;\n\tBigInteger.prototype.clamp = bnpClamp;\n\tBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n\tBigInteger.prototype.drShiftTo = bnpDRShiftTo;\n\tBigInteger.prototype.lShiftTo = bnpLShiftTo;\n\tBigInteger.prototype.rShiftTo = bnpRShiftTo;\n\tBigInteger.prototype.subTo = bnpSubTo;\n\tBigInteger.prototype.multiplyTo = bnpMultiplyTo;\n\tBigInteger.prototype.squareTo = bnpSquareTo;\n\tBigInteger.prototype.divRemTo = bnpDivRemTo;\n\tBigInteger.prototype.invDigit = bnpInvDigit;\n\tBigInteger.prototype.addTo = bnpAddTo;\n\t\n\t// public\n\tBigInteger.prototype.toString = bnToString;\n\tBigInteger.prototype.negate = bnNegate;\n\tBigInteger.prototype.abs = bnAbs;\n\tBigInteger.prototype.compareTo = bnCompareTo;\n\tBigInteger.prototype.bitLength = bnBitLength;\n\tBigInteger.prototype.mod = bnMod;\n\tBigInteger.prototype.equals = bnEquals;\n\tBigInteger.prototype.add = bnAdd;\n\tBigInteger.prototype.subtract = bnSubtract;\n\tBigInteger.prototype.multiply = bnMultiply;\n\tBigInteger.prototype.divide = bnDivide;\n\tBigInteger.prototype.modPow = bnModPow;\n\t\n\t// \"constants\"\n\tBigInteger.ZERO = nbv(0);\n\tBigInteger.ONE = nbv(1);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\n\t   * Constructs a new CognitoAccessToken object\n\t   * @param {string=} AccessToken The JWT access token.\n\t   */\n\t  function CognitoAccessToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      var expiration = JSON.parse(_awsSdk.util.base64.decode(payload).toString('utf8'));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\ticensed under the Amazon Software License (the \"License\").\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\n\t   * Constructs a new CognitoIdToken object\n\t   * @param {string=} IdToken The JWT Id token\n\t   */\n\t  function CognitoIdToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken;\n\t\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      var expiration = JSON.parse(_awsSdk.util.base64.decode(payload).toString('utf8'));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\n\t   * Constructs a new CognitoRefreshToken object\n\t   * @param {string=} RefreshToken The JWT refresh token.\n\t   */\n\t  function CognitoRefreshToken() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        RefreshToken = _ref.RefreshToken;\n\t\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.token = RefreshToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      return this.token;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tvar _BigInteger = __webpack_require__(3);\n\t\n\tvar _BigInteger2 = _interopRequireDefault(_BigInteger);\n\t\n\tvar _AuthenticationHelper = __webpack_require__(2);\n\t\n\tvar _AuthenticationHelper2 = _interopRequireDefault(_AuthenticationHelper);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(4);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(5);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(6);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoUserSession = __webpack_require__(9);\n\t\n\tvar _CognitoUserSession2 = _interopRequireDefault(_CognitoUserSession);\n\t\n\tvar _DateHelper = __webpack_require__(10);\n\t\n\tvar _DateHelper2 = _interopRequireDefault(_DateHelper);\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(8);\n\t\n\tvar _CognitoUserAttribute2 = _interopRequireDefault(_CognitoUserAttribute);\n\t\n\tvar _StorageHelper = __webpack_require__(11);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @callback nodeCallback\n\t * @template T result\n\t * @param {*} err The operation failure reason, or null.\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback onFailure\n\t * @param {*} err Failure reason.\n\t */\n\t\n\t/**\n\t * @callback onSuccess\n\t * @template T result\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback mfaRequired\n\t * @param {*} details MFA challenge details.\n\t */\n\t\n\t/**\n\t * @callback customChallenge\n\t * @param {*} details Custom challenge details.\n\t */\n\t\n\t/**\n\t * @callback inputVerificationCode\n\t * @param {*} data Server response.\n\t */\n\t\n\t/**\n\t * @callback authSuccess\n\t * @param {CognitoUserSession} session The new session.\n\t * @param {bool=} userConfirmationNecessary User must be confirmed.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUser = function () {\n\t  /**\n\t   * Constructs a new CognitoUser object\n\t   * @param {object} data Creation options\n\t   * @param {string} data.Username The user's username.\n\t   * @param {CognitoUserPool} data.Pool Pool containing the user.\n\t   */\n\t  function CognitoUser(data) {\n\t    _classCallCheck(this, CognitoUser);\n\t\n\t    if (data == null || data.Username == null || data.Pool == null) {\n\t      throw new Error('Username and pool information are required.');\n\t    }\n\t\n\t    this.username = data.Username || '';\n\t    this.pool = data.Pool;\n\t    this.Session = null;\n\t\n\t    this.client = data.Pool.client;\n\t\n\t    this.signInUserSession = null;\n\t    this.authenticationFlowType = 'USER_SRP_AUTH';\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoUserSession} the current session for this user\n\t   */\n\t\n\t\n\t  _createClass(CognitoUser, [{\n\t    key: 'getSignInUserSession',\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's username\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {String} the authentication flow type\n\t     */\n\t\n\t  }, {\n\t    key: 'getAuthenticationFlowType',\n\t    value: function getAuthenticationFlowType() {\n\t      return this.authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * sets authentication flow type\n\t     * @param {string} authenticationFlowType New value.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAuthenticationFlowType',\n\t    value: function setAuthenticationFlowType(authenticationFlowType) {\n\t      this.authenticationFlowType = authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n\t     * stuff\n\t     * @param {AuthenticationDetails} authDetails Contains the authentication data\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {newPasswordRequired} callback.newPasswordRequired new\n\t     *        password and any required attributes are required to continue\n\t     * @param {mfaRequired} callback.mfaRequired MFA code\n\t     *        required to continue.\n\t     * @param {customChallenge} callback.customChallenge Custom challenge\n\t     *        response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'authenticateUser',\n\t    value: function authenticateUser(authDetails, callback) {\n\t      var _this = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split('_')[1]);\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var serverBValue = void 0;\n\t      var salt = void 0;\n\t      var authParameters = {};\n\t\n\t      if (this.deviceKey != null) {\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      if (this.authenticationFlowType === 'CUSTOM_AUTH') {\n\t        authParameters.CHALLENGE_NAME = 'SRP_A';\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('initiateAuth', {\n\t        AuthFlow: this.authenticationFlowType,\n\t        ClientId: this.pool.getClientId(),\n\t        AuthParameters: authParameters,\n\t        ClientMetadata: authDetails.getValidationData()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        _this.username = challengeParameters.USER_ID_FOR_SRP;\n\t        serverBValue = new _BigInteger2.default(challengeParameters.SRP_B, 16);\n\t        salt = new _BigInteger2.default(challengeParameters.SALT, 16);\n\t        _this.getCachedDeviceKeyAndPassword();\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this.username, authDetails.getPassword(), serverBValue, salt);\n\t\n\t        var dateNow = dateHelper.getNowString();\n\t\n\t        var signatureString = _awsSdk.util.crypto.hmac(hkdf, _awsSdk.util.buffer.concat([new _awsSdk.util.Buffer(_this.pool.getUserPoolId().split('_')[1], 'utf8'), new _awsSdk.util.Buffer(_this.username, 'utf8'), new _awsSdk.util.Buffer(challengeParameters.SECRET_BLOCK, 'base64'), new _awsSdk.util.Buffer(dateNow, 'utf8')]), 'base64', 'sha256');\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t\n\t        if (_this.deviceKey != null) {\n\t          challengeResponses.DEVICE_KEY = _this.deviceKey;\n\t        }\n\t\n\t        var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n\t          return _this.client.makeUnauthenticatedRequest('respondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n\t            if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n\t              challengeResponses.DEVICE_KEY = null;\n\t              _this.deviceKey = null;\n\t              _this.randomPassword = null;\n\t              _this.deviceGroupKey = null;\n\t              _this.clearCachedDeviceKeyAndPassword();\n\t              return respondToAuthChallenge(challenge, challengeCallback);\n\t            }\n\t            return challengeCallback(errChallenge, dataChallenge);\n\t          });\n\t        };\n\t\n\t        respondToAuthChallenge({\n\t          ChallengeName: 'PASSWORD_VERIFIER',\n\t          ClientId: _this.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          var challengeName = dataAuthenticate.ChallengeName;\n\t          if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n\t            _this.Session = dataAuthenticate.Session;\n\t            var userAttributes = null;\n\t            var rawRequiredAttributes = null;\n\t            var requiredAttributes = [];\n\t            var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t            if (dataAuthenticate.ChallengeParameters) {\n\t              userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n\t              rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n\t            }\n\t\n\t            if (rawRequiredAttributes) {\n\t              for (var i = 0; i < rawRequiredAttributes.length; i++) {\n\t                requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n\t              }\n\t            }\n\t            return callback.newPasswordRequired(userAttributes, requiredAttributes);\n\t          }\n\t          return _this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t    * PRIVATE ONLY: This is an internal only method and should not\n\t    * be directly called by the consumers.\n\t    * @param {object} dataAuthenticate authentication data\n\t    * @param {object} authenticationHelper helper created\n\t    * @param {callback} callback passed on from caller\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: 'authenticateUserInternal',\n\t    value: function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n\t      var _this2 = this;\n\t\n\t      var challengeName = dataAuthenticate.ChallengeName;\n\t      var challengeParameters = dataAuthenticate.ChallengeParameters;\n\t\n\t      if (challengeName === 'SMS_MFA') {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.mfaRequired(challengeName, challengeParameters);\n\t      }\n\t\n\t      if (challengeName === 'CUSTOM_CHALLENGE') {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.customChallenge(challengeParameters);\n\t      }\n\t\n\t      if (challengeName === 'DEVICE_SRP_AUTH') {\n\t        this.getDeviceResponse(callback);\n\t        return undefined;\n\t      }\n\t\n\t      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t      this.cacheTokens();\n\t\n\t      var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\t      if (newDeviceMetadata == null) {\n\t        return callback.onSuccess(this.signInUserSession);\n\t      }\n\t\n\t      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t      var deviceSecretVerifierConfig = {\n\t        Salt: new _awsSdk.util.Buffer(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n\t        PasswordVerifier: new _awsSdk.util.Buffer(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n\t      };\n\t\n\t      this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n\t      this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n\t      this.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t      this.client.makeUnauthenticatedRequest('confirmDevice', {\n\t        DeviceKey: newDeviceMetadata.DeviceKey,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t        DeviceName: navigator.userAgent\n\t      }, function (errConfirm, dataConfirm) {\n\t        if (errConfirm) {\n\t          return callback.onFailure(errConfirm);\n\t        }\n\t\n\t        _this2.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t        _this2.cacheDeviceKeyAndPassword();\n\t        if (dataConfirm.UserConfirmationNecessary === true) {\n\t          return callback.onSuccess(_this2.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t        }\n\t        return callback.onSuccess(_this2.signInUserSession);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t    * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n\t    * Pass the new password with any new user attributes to be updated.\n\t    * User attribute keys must be of format userAttributes.<attribute_name>.\n\t    * @param {string} newPassword new password for this user\n\t    * @param {object} requiredAttributeData map with values for all required attributes\n\t    * @param {object} callback Result callback map.\n\t    * @param {onFailure} callback.onFailure Called on any error.\n\t    * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n\t    * @param {customChallenge} callback.customChallenge Custom challenge\n\t    *         response required to continue.\n\t    * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: 'completeNewPasswordChallenge',\n\t    value: function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n\t      var _this3 = this;\n\t\n\t      if (!newPassword) {\n\t        return callback.onFailure(new Error('New password is required.'));\n\t      }\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split('_')[1]);\n\t      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t      var finalUserAttributes = {};\n\t      if (requiredAttributeData) {\n\t        Object.keys(requiredAttributeData).forEach(function (key) {\n\t          finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n\t        });\n\t      }\n\t\n\t      finalUserAttributes.NEW_PASSWORD = newPassword;\n\t      finalUserAttributes.USERNAME = this.username;\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: finalUserAttributes,\n\t        Session: this.Session\n\t      }, function (errAuthenticate, dataAuthenticate) {\n\t        if (errAuthenticate) {\n\t          return callback.onFailure(errAuthenticate);\n\t        }\n\t        return _this3.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session using device authentication. It is called at the end of user\n\t     * authentication\n\t     *\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'getDeviceResponse',\n\t    value: function getDeviceResponse(callback) {\n\t      var _this4 = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.deviceGroupKey);\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var authParameters = {};\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.DEVICE_KEY = this.deviceKey;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'DEVICE_SRP_AUTH',\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: authParameters\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        var serverBValue = new _BigInteger2.default(challengeParameters.SRP_B, 16);\n\t        var salt = new _BigInteger2.default(challengeParameters.SALT, 16);\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this4.deviceKey, _this4.randomPassword, serverBValue, salt);\n\t\n\t        var dateNow = dateHelper.getNowString();\n\t\n\t        var signatureString = _awsSdk.util.crypto.hmac(hkdf, _awsSdk.util.buffer.concat([new _awsSdk.util.Buffer(_this4.deviceGroupKey, 'utf8'), new _awsSdk.util.Buffer(_this4.deviceKey, 'utf8'), new _awsSdk.util.Buffer(challengeParameters.SECRET_BLOCK, 'base64'), new _awsSdk.util.Buffer(dateNow, 'utf8')]), 'base64', 'sha256');\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this4.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t        challengeResponses.DEVICE_KEY = _this4.deviceKey;\n\t\n\t        _this4.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t          ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n\t          ClientId: _this4.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          _this4.signInUserSession = _this4.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t          _this4.cacheTokens();\n\t\n\t          return callback.onSuccess(_this4.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used for a certain user to confirm the registration by using a confirmation code\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'confirmRegistration',\n\t    value: function confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n\t      this.client.makeUnauthenticatedRequest('confirmSignUp', {\n\t        ClientId: this.pool.getClientId(),\n\t        ConfirmationCode: confirmationCode,\n\t        Username: this.username,\n\t        ForceAliasCreation: forceAliasCreation\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has the responses to a custom challenge\n\t     * @param {string} answerChallenge The custom challange answer.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {customChallenge} callback.customChallenge\n\t     *    Custom challenge response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'sendCustomChallengeAnswer',\n\t    value: function sendCustomChallengeAnswer(answerChallenge, callback) {\n\t      var _this5 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.ANSWER = answerChallenge;\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'CUSTOM_CHALLENGE',\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeName = data.ChallengeName;\n\t\n\t        if (challengeName === 'CUSTOM_CHALLENGE') {\n\t          _this5.Session = data.Session;\n\t          return callback.customChallenge(data.ChallengeParameters);\n\t        }\n\t\n\t        _this5.signInUserSession = _this5.getCognitoUserSession(data.AuthenticationResult);\n\t        _this5.cacheTokens();\n\t        return callback.onSuccess(_this5.signInUserSession);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has an MFA code\n\t     * @param {string} confirmationCode The MFA code entered by the user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'sendMFACode',\n\t    value: function sendMFACode(confirmationCode, callback) {\n\t      var _this6 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.SMS_MFA_CODE = confirmationCode;\n\t\n\t      if (this.deviceKey != null) {\n\t        challengeResponses.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n\t        ChallengeName: 'SMS_MFA',\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, dataAuthenticate) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeName = dataAuthenticate.ChallengeName;\n\t\n\t        if (challengeName === 'DEVICE_SRP_AUTH') {\n\t          _this6.getDeviceResponse(callback);\n\t          return undefined;\n\t        }\n\t\n\t        _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t        _this6.cacheTokens();\n\t\n\t        if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        }\n\t\n\t        var authenticationHelper = new _AuthenticationHelper2.default(_this6.pool.getUserPoolId().split('_')[1]);\n\t        authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t        var deviceSecretVerifierConfig = {\n\t          Salt: new _awsSdk.util.Buffer(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n\t          PasswordVerifier: new _awsSdk.util.Buffer(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n\t        };\n\t\n\t        _this6.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n\t        _this6.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n\t        _this6.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t        _this6.client.makeUnauthenticatedRequest('confirmDevice', {\n\t          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n\t          AccessToken: _this6.signInUserSession.getAccessToken().getJwtToken(),\n\t          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t          DeviceName: navigator.userAgent\n\t        }, function (errConfirm, dataConfirm) {\n\t          if (errConfirm) {\n\t            return callback.onFailure(errConfirm);\n\t          }\n\t\n\t          _this6.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t          _this6.cacheDeviceKeyAndPassword();\n\t          if (dataConfirm.UserConfirmationNecessary === true) {\n\t            return callback.onSuccess(_this6.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t          }\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to change the current password\n\t     * @param {string} oldUserPassword The current password.\n\t     * @param {string} newUserPassword The requested new password.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'changePassword',\n\t    value: function changePassword(oldUserPassword, newUserPassword, callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('changePassword', {\n\t        PreviousPassword: oldUserPassword,\n\t        ProposedPassword: newUserPassword,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to enable MFA for himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'enableMFA',\n\t    value: function enableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t      var mfaEnabled = {\n\t        DeliveryMedium: 'SMS',\n\t        AttributeName: 'phone_number'\n\t      };\n\t      mfaOptions.push(mfaEnabled);\n\t\n\t      this.client.makeUnauthenticatedRequest('setUserSettings', {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to disable MFA for himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'disableMFA',\n\t    value: function disableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t\n\t      this.client.makeUnauthenticatedRequest('setUserSettings', {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete himself\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteUser',\n\t    value: function deleteUser(callback) {\n\t      var _this7 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('deleteUser', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        _this7.clearCachedTokens();\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n\t     */\n\t    /**\n\t     * This is used by an authenticated user to change a list of attributes\n\t     * @param {AttributeArg[]} attributes A list of the new user attributes.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'updateAttributes',\n\t    value: function updateAttributes(attributes, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateUserAttributes', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        UserAttributes: attributes\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to get a list of attributes\n\t     * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getUserAttributes',\n\t    value: function getUserAttributes(callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getUser', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, userData) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var attributeList = [];\n\t\n\t        for (var i = 0; i < userData.UserAttributes.length; i++) {\n\t          var attribute = {\n\t            Name: userData.UserAttributes[i].Name,\n\t            Value: userData.UserAttributes[i].Value\n\t          };\n\t          var userAttribute = new _CognitoUserAttribute2.default(attribute);\n\t          attributeList.push(userAttribute);\n\t        }\n\t\n\t        return callback(null, attributeList);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to get the MFAOptions\n\t     * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getMFAOptions',\n\t    value: function getMFAOptions(callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getUser', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, userData) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        return callback(null, userData.MFAOptions);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete a list of attributes\n\t     * @param {string[]} attributeList Names of the attributes to delete.\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteAttributes',\n\t    value: function deleteAttributes(attributeList, callback) {\n\t      if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t        return callback(new Error('User is not authenticated'), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('deleteUserAttributes', {\n\t        UserAttributeNames: attributeList,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by a user to resend a confirmation code\n\t     * @param {nodeCallback<string>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'resendConfirmationCode',\n\t    value: function resendConfirmationCode(callback) {\n\t      this.client.makeUnauthenticatedRequest('resendConfirmationCode', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, 'SUCCESS');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session, either from the session object\n\t     * or from  the local storage, or by using a refresh token\n\t     *\n\t     * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getSession',\n\t    value: function getSession(callback) {\n\t      if (this.username == null) {\n\t        return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n\t      }\n\t\n\t      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n\t        return callback(null, this.signInUserSession);\n\t      }\n\t\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var idTokenKey = keyPrefix + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.refreshToken';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      if (storage.getItem(idTokenKey)) {\n\t        var idToken = new _CognitoIdToken2.default({\n\t          IdToken: storage.getItem(idTokenKey)\n\t        });\n\t        var accessToken = new _CognitoAccessToken2.default({\n\t          AccessToken: storage.getItem(accessTokenKey)\n\t        });\n\t        var refreshToken = new _CognitoRefreshToken2.default({\n\t          RefreshToken: storage.getItem(refreshTokenKey)\n\t        });\n\t\n\t        var sessionData = {\n\t          IdToken: idToken,\n\t          AccessToken: accessToken,\n\t          RefreshToken: refreshToken\n\t        };\n\t        var cachedSession = new _CognitoUserSession2.default(sessionData);\n\t        if (cachedSession.isValid()) {\n\t          this.signInUserSession = cachedSession;\n\t          return callback(null, this.signInUserSession);\n\t        }\n\t\n\t        if (refreshToken.getToken() == null) {\n\t          return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n\t        }\n\t\n\t        this.refreshSession(refreshToken, callback);\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This uses the refreshToken to retrieve a new session\n\t     * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n\t     * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'refreshSession',\n\t    value: function refreshSession(refreshToken, callback) {\n\t      var _this8 = this;\n\t\n\t      var authParameters = {};\n\t      authParameters.REFRESH_TOKEN = refreshToken.getToken();\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      if (storage.getItem(lastUserKey)) {\n\t        this.username = storage.getItem(lastUserKey);\n\t        var deviceKeyKey = keyPrefix + '.' + this.username + '.deviceKey';\n\t        this.deviceKey = storage.getItem(deviceKeyKey);\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('initiateAuth', {\n\t        ClientId: this.pool.getClientId(),\n\t        AuthFlow: 'REFRESH_TOKEN_AUTH',\n\t        AuthParameters: authParameters\n\t      }, function (err, authResult) {\n\t        if (err) {\n\t          if (err.code === 'NotAuthorizedException') {\n\t            _this8.clearCachedTokens();\n\t          }\n\t          return callback(err, null);\n\t        }\n\t        if (authResult) {\n\t          var authenticationResult = authResult.AuthenticationResult;\n\t          if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n\t            authenticationResult.RefreshToken = refreshToken.getToken();\n\t          }\n\t          _this8.signInUserSession = _this8.getCognitoUserSession(authenticationResult);\n\t          _this8.cacheTokens();\n\t          return callback(null, _this8.signInUserSession);\n\t        }\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to save the session tokens to local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheTokens',\n\t    value: function cacheTokens() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      storage.setItem(lastUserKey, this.username);\n\t    }\n\t\n\t    /**\n\t     * This is used to cache the device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheDeviceKeyAndPassword',\n\t    value: function cacheDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      storage.setItem(deviceKeyKey, this.deviceKey);\n\t      storage.setItem(randomPasswordKey, this.randomPassword);\n\t      storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to get current device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getCachedDeviceKeyAndPassword',\n\t    value: function getCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      if (storage.getItem(deviceKeyKey)) {\n\t        this.deviceKey = storage.getItem(deviceKeyKey);\n\t        this.randomPassword = storage.getItem(randomPasswordKey);\n\t        this.deviceGroupKey = storage.getItem(deviceGroupKeyKey);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the device key info from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedDeviceKeyAndPassword',\n\t    value: function clearCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n\t      var deviceKeyKey = keyPrefix + '.deviceKey';\n\t      var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n\t      var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      storage.removeItem(deviceKeyKey);\n\t      storage.removeItem(randomPasswordKey);\n\t      storage.removeItem(deviceGroupKeyKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the session tokens from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedTokens',\n\t    value: function clearCachedTokens() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      storage.removeItem(idTokenKey);\n\t      storage.removeItem(accessTokenKey);\n\t      storage.removeItem(refreshTokenKey);\n\t      storage.removeItem(lastUserKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to build a user session from tokens retrieved in the authentication result\n\t     * @param {object} authResult Successful auth response from server.\n\t     * @returns {CognitoUserSession} The new user session.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'getCognitoUserSession',\n\t    value: function getCognitoUserSession(authResult) {\n\t      var idToken = new _CognitoIdToken2.default(authResult);\n\t      var accessToken = new _CognitoAccessToken2.default(authResult);\n\t      var refreshToken = new _CognitoRefreshToken2.default(authResult);\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken\n\t      };\n\t\n\t      return new _CognitoUserSession2.default(sessionData);\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate a forgot password request\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode?} callback.inputVerificationCode\n\t     *    Optional callback raised instead of onSuccess with response data.\n\t     * @param {onSuccess<void>?} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'forgotPassword',\n\t    value: function forgotPassword(callback) {\n\t      this.client.makeUnauthenticatedRequest('forgotPassword', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        if (typeof callback.inputVerificationCode === 'function') {\n\t          return callback.inputVerificationCode(data);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm a new password using a confirmationCode\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {string} newPassword Confirm new password.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<void>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'confirmPassword',\n\t    value: function confirmPassword(confirmationCode, newPassword, callback) {\n\t      this.client.makeUnauthenticatedRequest('confirmForgotPassword', {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username,\n\t        ConfirmationCode: confirmationCode,\n\t        Password: newPassword\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate an attribute confirmation request\n\t     * @param {string} attributeName User attribute that needs confirmation.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getAttributeVerificationCode',\n\t    value: function getAttributeVerificationCode(attributeName, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getUserAttributeVerificationCode', {\n\t        AttributeName: attributeName,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.inputVerificationCode(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm an attribute using a confirmation code\n\t     * @param {string} attributeName Attribute being confirmed.\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'verifyAttribute',\n\t    value: function verifyAttribute(attributeName, confirmationCode, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('verifyUserAttribute', {\n\t        AttributeName: attributeName,\n\t        Code: confirmationCode,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get the device information using the current device key\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getDevice',\n\t    value: function getDevice(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('getDevice', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to forget a specific device\n\t     * @param {string} deviceKey Device key.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'forgetSpecificDevice',\n\t    value: function forgetSpecificDevice(deviceKey, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('forgetDevice', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: deviceKey\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to forget the current device\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'forgetDevice',\n\t    value: function forgetDevice(callback) {\n\t      var _this9 = this;\n\t\n\t      this.forgetSpecificDevice(this.deviceKey, {\n\t        onFailure: callback.onFailure,\n\t        onSuccess: function onSuccess(result) {\n\t          _this9.deviceKey = null;\n\t          _this9.deviceGroupKey = null;\n\t          _this9.randomPassword = null;\n\t          _this9.clearCachedDeviceKeyAndPassword();\n\t          return callback.onSuccess(result);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setDeviceStatusRemembered',\n\t    value: function setDeviceStatusRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: 'remembered'\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as not remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setDeviceStatusNotRemembered',\n\t    value: function setDeviceStatusNotRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: 'not_remembered'\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to list all devices for a user\n\t     *\n\t     * @param {int} limit the number of devices returned in a call\n\t     * @param {string} paginationToken the pagination token in case any was returned before\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'listDevices',\n\t    value: function listDevices(limit, paginationToken, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('listDevices', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        Limit: limit,\n\t        PaginationToken: paginationToken\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to globally revoke all tokens issued to a user\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess<string>} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'globalSignOut',\n\t    value: function globalSignOut(callback) {\n\t      var _this10 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error('User is not authenticated'));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest('globalSignOut', {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        _this10.clearCachedTokens();\n\t        return callback.onSuccess('SUCCESS');\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used for the user to signOut of the application and clear the cached tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokens();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUser;\n\t}();\n\t\n\texports.default = CognitoUser;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserAttribute = function () {\n\t  /**\n\t   * Constructs a new CognitoUserAttribute object\n\t   * @param {string=} Name The record's name\n\t   * @param {string=} Value The record's value\n\t   */\n\t  function CognitoUserAttribute() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        Name = _ref.Name,\n\t        Value = _ref.Value;\n\t\n\t    _classCallCheck(this, CognitoUserAttribute);\n\t\n\t    this.Name = Name || '';\n\t    this.Value = Value || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's value.\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserAttribute, [{\n\t    key: 'getValue',\n\t    value: function getValue() {\n\t      return this.Value;\n\t    }\n\t\n\t    /**\n\t     * Sets the record's value.\n\t     * @param {string} value The new value.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: 'setValue',\n\t    value: function setValue(value) {\n\t      this.Value = value;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record's name.\n\t     */\n\t\n\t  }, {\n\t    key: 'getName',\n\t    value: function getName() {\n\t      return this.Name;\n\t    }\n\t\n\t    /**\n\t     * Sets the record's name\n\t     * @param {string} name The new name.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: 'setName',\n\t    value: function setName(name) {\n\t      this.Name = name;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} a string representation of the record.\n\t     */\n\t\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return JSON.stringify(this);\n\t    }\n\t\n\t    /**\n\t     * @returns {object} a flat object representing the record.\n\t     */\n\t\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      return {\n\t        Name: this.Name,\n\t        Value: this.Value\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserAttribute;\n\t}();\n\t\n\texports.default = CognitoUserAttribute;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserSession = function () {\n\t  /**\n\t   * Constructs a new CognitoUserSession object\n\t   * @param {string} IdToken The session's Id token.\n\t   * @param {string=} RefreshToken The session's refresh token.\n\t   * @param {string} AccessToken The session's access token.\n\t   */\n\t  function CognitoUserSession() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken,\n\t        RefreshToken = _ref.RefreshToken,\n\t        AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoUserSession);\n\t\n\t    if (AccessToken == null || IdToken == null) {\n\t      throw new Error('Id token and Access Token must be present.');\n\t    }\n\t\n\t    this.idToken = IdToken;\n\t    this.refreshToken = RefreshToken;\n\t    this.accessToken = AccessToken;\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoIdToken} the session's Id token\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserSession, [{\n\t    key: 'getIdToken',\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoRefreshToken} the session's refresh token\n\t     */\n\t\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAccessToken} the session's access token\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccessToken',\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\n\t     * Checks to see if the session is still valid based on session expiry information found\n\t     * in tokens and the current time\n\t     * @returns {boolean} if the session is still valid\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t\n\t      return now < this.accessToken.getExpiration() && now < this.idToken.getExpiration();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserSession;\n\t}();\n\t\n\texports.default = CognitoUserSession;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t  function DateHelper() {\n\t    _classCallCheck(this, DateHelper);\n\t  }\n\t\n\t  _createClass(DateHelper, [{\n\t    key: 'getNowString',\n\t\n\t    /**\n\t     * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n\t     */\n\t    value: function getNowString() {\n\t      var now = new Date();\n\t\n\t      var weekDay = weekNames[now.getUTCDay()];\n\t      var month = monthNames[now.getUTCMonth()];\n\t      var day = now.getUTCDate();\n\t\n\t      var hours = now.getUTCHours();\n\t      if (hours < 10) {\n\t        hours = '0' + hours;\n\t      }\n\t\n\t      var minutes = now.getUTCMinutes();\n\t      if (minutes < 10) {\n\t        minutes = '0' + minutes;\n\t      }\n\t\n\t      var seconds = now.getUTCSeconds();\n\t      if (seconds < 10) {\n\t        seconds = '0' + seconds;\n\t      }\n\t\n\t      var year = now.getUTCFullYear();\n\t\n\t      // ddd MMM D HH:mm:ss UTC YYYY\n\t      var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\t\n\t      return dateNow;\n\t    }\n\t  }]);\n\t\n\t  return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar dataMemory = {};\n\t\n\t/** @class */\n\t\n\tvar MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t  }\n\t\n\t  _createClass(MemoryStorage, null, [{\n\t    key: 'setItem',\n\t\n\t\n\t    /**\n\t     * This is used to set a specific item in storage\n\t     * @param {string} key - the key for the item\n\t     * @param {object} value - the value\n\t     * @returns {string} value that was set\n\t     */\n\t    value: function setItem(key, value) {\n\t      dataMemory[key] = value;\n\t      return dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to get a specific key from storage\n\t     * @param {string} key - the key for the item\n\t     * This is used to clear the storage\n\t     * @returns {string} the data item\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to remove an item from storage\n\t     * @param {string} key - the key being set\n\t     * @returns {string} value - value that was deleted\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return delete dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the storage\n\t     * @returns {string} nothing\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      dataMemory = {};\n\t      return dataMemory;\n\t    }\n\t  }]);\n\t\n\t  return MemoryStorage;\n\t}();\n\t\n\t/** @class */\n\t\n\t\n\tvar StorageHelper = function () {\n\t\n\t  /**\n\t   * This is used to get a storage object\n\t   * @returns {object} the storage\n\t   */\n\t  function StorageHelper() {\n\t    _classCallCheck(this, StorageHelper);\n\t\n\t    try {\n\t      this.storageWindow = window.localStorage;\n\t      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n\t      this.storageWindow.removeItem('aws.cognito.test-ls');\n\t    } catch (exception) {\n\t      this.storageWindow = MemoryStorage;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * This is used to return the storage\n\t   * @returns {object} the storage\n\t   */\n\t\n\t\n\t  _createClass(StorageHelper, [{\n\t    key: 'getStorage',\n\t    value: function getStorage() {\n\t      return this.storageWindow;\n\t    }\n\t  }]);\n\t\n\t  return StorageHelper;\n\t}();\n\t\n\texports.default = StorageHelper;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \"License\").\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \"license\" file accompanying this file. This file is\n\t * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar AuthenticationDetails = function () {\n\t  /**\n\t   * Constructs a new AuthenticationDetails object\n\t   * @param {object=} data Creation options.\n\t   * @param {string} data.Username User being authenticated.\n\t   * @param {string} data.Password Plain-text password to authenticate with.\n\t   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n\t   */\n\t  function AuthenticationDetails(data) {\n\t    _classCallCheck(this, AuthenticationDetails);\n\t\n\t    var _ref = data || {},\n\t        ValidationData = _ref.ValidationData,\n\t        Username = _ref.Username,\n\t        Password = _ref.Password;\n\t\n\t    this.validationData = ValidationData || [];\n\t    this.username = Username;\n\t    this.password = Password;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's username\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationDetails, [{\n\t    key: \"getUsername\",\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record's password\n\t     */\n\t\n\t  }, {\n\t    key: \"getPassword\",\n\t    value: function getPassword() {\n\t      return this.password;\n\t    }\n\t\n\t    /**\n\t     * @returns {Array} the record's validationData\n\t     */\n\t\n\t  }, {\n\t    key: \"getValidationData\",\n\t    value: function getValidationData() {\n\t      return this.validationData;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationDetails;\n\t}();\n\t\n\texports.default = AuthenticationDetails;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\ticensed under the Amazon Software License (the \"License\").\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \"license\" file accompanying this file. This file is\n\tdistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _awsSdk = __webpack_require__(1);\n\t\n\tvar _CognitoUser = __webpack_require__(7);\n\t\n\tvar _CognitoUser2 = _interopRequireDefault(_CognitoUser);\n\t\n\tvar _StorageHelper = __webpack_require__(11);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoUserPool = function () {\n\t  /**\n\t   * Constructs a new CognitoUserPool object\n\t   * @param {object} data Creation options.\n\t   * @param {string} data.UserPoolId Cognito user pool id.\n\t   * @param {string} data.ClientId User pool application client id.\n\t   */\n\t  function CognitoUserPool(data) {\n\t    _classCallCheck(this, CognitoUserPool);\n\t\n\t    var _ref = data || {},\n\t        UserPoolId = _ref.UserPoolId,\n\t        ClientId = _ref.ClientId;\n\t\n\t    if (!UserPoolId || !ClientId) {\n\t      throw new Error('Both UserPoolId and ClientId are required.');\n\t    }\n\t    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n\t      throw new Error('Invalid UserPoolId format.');\n\t    }\n\t    var region = UserPoolId.split('_')[0];\n\t\n\t    this.userPoolId = UserPoolId;\n\t    this.clientId = ClientId;\n\t\n\t    this.client = new _awsSdk.CognitoIdentityServiceProvider({ apiVersion: '2016-04-19', region: region });\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the user pool id\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserPool, [{\n\t    key: 'getUserPoolId',\n\t    value: function getUserPoolId() {\n\t      return this.userPoolId;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the client id\n\t     */\n\t\n\t  }, {\n\t    key: 'getClientId',\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\n\t     * @typedef {object} SignUpResult\n\t     * @property {CognitoUser} user New user.\n\t     * @property {bool} userConfirmed If the user is already confirmed.\n\t     */\n\t    /**\n\t     * method for signing up a user\n\t     * @param {string} username User's username.\n\t     * @param {string} password Plain-text initial password entered by user.\n\t     * @param {(AttributeArg[])=} userAttributes New user attributes.\n\t     * @param {(AttributeArg[])=} validationData Application metadata.\n\t     * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signUp',\n\t    value: function signUp(username, password, userAttributes, validationData, callback) {\n\t      var _this = this;\n\t\n\t      this.client.makeUnauthenticatedRequest('signUp', {\n\t        ClientId: this.clientId,\n\t        Username: username,\n\t        Password: password,\n\t        UserAttributes: userAttributes,\n\t        ValidationData: validationData\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var cognitoUser = {\n\t          Username: username,\n\t          Pool: _this\n\t        };\n\t\n\t        var returnData = {\n\t          user: new _CognitoUser2.default(cognitoUser),\n\t          userConfirmed: data.UserConfirmed\n\t        };\n\t\n\t        return callback(null, returnData);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * method for getting the current user of the application from the local storage\n\t     *\n\t     * @returns {CognitoUser} the user retrieved from storage\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentUser',\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\t      var storage = new _StorageHelper2.default().getStorage();\n\t\n\t      var lastAuthUser = storage.getItem(lastUserKey);\n\t      if (lastAuthUser) {\n\t        var cognitoUser = {\n\t          Username: lastAuthUser,\n\t          Pool: this\n\t        };\n\t\n\t        return new _CognitoUser2.default(cognitoUser);\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserPool;\n\t}();\n\t\n\texports.default = CognitoUserPool;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _AuthenticationDetails = __webpack_require__(12);\n\t\n\tObject.defineProperty(exports, 'AuthenticationDetails', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationDetails).default;\n\t  }\n\t});\n\t\n\tvar _AuthenticationHelper = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'AuthenticationHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationHelper).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, 'CognitoAccessToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, 'CognitoIdToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'CognitoRefreshToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUser = __webpack_require__(7);\n\t\n\tObject.defineProperty(exports, 'CognitoUser', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUser).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'CognitoUserAttribute', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserAttribute).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserPool = __webpack_require__(13);\n\t\n\tObject.defineProperty(exports, 'CognitoUserPool', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserPool).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserSession = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'CognitoUserSession', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(10);\n\t\n\tObject.defineProperty(exports, 'DateHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// amazon-cognito-identity.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 87f23737aba8a95b0ffd","import { CognitoIdentityServiceProvider } from 'aws-sdk';\nimport * as enhancements from './src';\n\nexport * from './src';\n\nObject.keys(enhancements).forEach(key => {\n  CognitoIdentityServiceProvider[key] = enhancements[key];\n});\n\n// The version of crypto-browserify included by aws-sdk only\n// checks for window.crypto, not window.msCrypto as used by\n// IE 11 – so we set it explicitly here\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n  window.crypto = window.msCrypto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"AWSCognito\"],\"commonjs2\":\"aws-sdk\",\"commonjs\":\"aws-sdk\",\"amd\":\"aws-sdk\"}\n// module id = 1\n// module chunks = 0","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from 'aws-sdk';\nimport BigInteger from './BigInteger';\n\nconst initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1'\n  + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD'\n  + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245'\n  + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED'\n  + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D'\n  + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F'\n  + '83655D23DCA3AD961C62F356208552BB9ED529077096966D'\n  + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B'\n  + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9'\n  + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510'\n  + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64'\n  + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7'\n  + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B'\n  + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C'\n  + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31'\n  + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n\nconst newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\n/** @class */\nexport default class AuthenticationHelper {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  constructor(PoolName) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2', 16);\n    this.k = new BigInteger(this.hexHash(`00${this.N.toString(16)}0${this.g.toString(16)}`), 16);\n\n    this.smallAValue = this.generateRandomSmallA();\n    this.largeAValue = this.calculateA(this.smallAValue);\n\n    this.infoBits = new util.Buffer('Caldera Derived Key', 'utf8');\n\n    this.poolName = PoolName;\n  }\n\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n  getSmallAValue() {\n    return this.smallAValue;\n  }\n\n  /**\n   * @returns {BigInteger} large A, a value generated from small A\n   */\n  getLargeAValue() {\n    return this.largeAValue;\n  }\n\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  generateRandomSmallA() {\n    const hexRandom = util.crypto.lib.randomBytes(128).toString('hex');\n\n    const randomBigInt = new BigInteger(hexRandom, 16);\n    const smallABigInt = randomBigInt.mod(this.N);\n\n    return smallABigInt;\n  }\n\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  generateRandomString() {\n    return util.crypto.lib.randomBytes(40).toString('base64');\n  }\n\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  getRandomPassword() {\n    return this.randomPassword;\n  }\n\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  getVerifierDevices() {\n    return this.verifierDevices;\n  }\n\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @returns {void}\n   */\n  generateHashDevice(deviceGroupKey, username) {\n    this.randomPassword = this.generateRandomString();\n    const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n    const hashedString = this.hash(combinedString);\n\n    const hexRandom = util.crypto.lib.randomBytes(16).toString('hex');\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n\n    const verifierDevicesNotPadded = this.g.modPow(\n      new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16),\n      this.N);\n\n    this.verifierDevices = this.padHex(verifierDevicesNotPadded);\n  }\n\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @returns {BigInteger} Computed large A.\n   * @private\n   */\n  calculateA(a) {\n    const A = this.g.modPow(a, this.N);\n\n    if (A.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('Illegal paramater. A mod N cannot be 0.');\n    }\n    return A;\n  }\n\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    const finalU = new BigInteger(this.UHexHash, 16);\n\n    return finalU;\n  }\n\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hash(buf) {\n    const hashHex = util.crypto.sha256(buf, 'hex');\n    return (new Array(64 - hashHex.length).join('0')) + hashHex;\n  }\n\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hexHash(hexStr) {\n    return this.hash(new util.Buffer(hexStr, 'hex'));\n  }\n\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n  computehkdf(ikm, salt) {\n    const prk = util.crypto.hmac(salt, ikm, 'buffer', 'sha256');\n    const infoBitsUpdate = util.buffer.concat([\n      this.infoBits,\n      new util.Buffer(String.fromCharCode(1), 'utf8'),\n    ]);\n    const hmac = util.crypto.hmac(prk, infoBitsUpdate, 'buffer', 'sha256');\n    return hmac.slice(0, 16);\n  }\n\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @returns {Buffer} Computed HKDF value.\n   */\n  getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(BigInteger.ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n\n    const usernamePassword = `${this.poolName}${username}:${password}`;\n    const usernamePasswordHash = this.hash(usernamePassword);\n\n    const xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n\n    const gModPowXN = this.g.modPow(xValue, this.N);\n    const intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n    const sValue = intValue2.modPow(\n      this.smallAValue.add(this.UValue.multiply(xValue)),\n      this.N\n    ).mod(this.N);\n\n    const hkdf = this.computehkdf(\n      new util.Buffer(this.padHex(sValue), 'hex'),\n      new util.Buffer(this.padHex(this.UHexHash), 'hex'));\n\n    return hkdf;\n  }\n\n  /**\n  * Return constant newPasswordRequiredChallengeUserAttributePrefix\n  * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n  */\n  getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n\n  /**\n   * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n   * @param {BigInteger|String} Number or string to pad.\n   * @returns {String} Padded hex string.\n   */\n  padHex(bigInt) {\n    let hashStr = bigInt.toString(16);\n    if (hashStr.length % 2 === 1) {\n      hashStr = `0${hashStr}`;\n    } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\n      hashStr = `00${hashStr}`;\n    }\n    return hashStr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthenticationHelper.js","// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\n\nexport default BigInteger;\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n// (public) Constructor\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n}\n\n// return new, unset BigInteger\nfunction nbi() {\n  return new BigInteger(null);\n}\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n\nBigInteger.prototype.am = am1;\n\n// Bits per digit\nvar dbits = 26;\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n  BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n  BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n  BI_RC[rr++] = vv;\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i)\n    r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;\n  else if (x < -1) this[0] = x + this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = nbi();\n\n  r.fromInt(i);\n\n  return r;\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;\n  else if (b == 8) k = 3;\n  else if (b == 2) k = 1;\n  else if (b == 32) k = 5;\n  else if (b == 4) k = 2;\n  else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while (--i >= 0) {\n    var x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0) this[this.t++] = x;\n    else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c)\n    --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if (this.s < 0) return \"-\" + this.negate().toString();\n  var k;\n  if (b == 16) k = 4;\n  else if (b == 8) k = 3;\n  else if (b == 2) k = 1;\n  else if (b == 32) k = 5;\n  else if (b == 4) k = 2;\n  else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n  var km = (1 << k) - 1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB - i * this.DB % k;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : \"0\";\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = nbi();\n\n  BigInteger.ZERO.subTo(this, r);\n\n  return r;\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0)\n    if ((r = this[i] - a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i;\n  for (i = this.t - 1; i >= 0; --i)\n    r[i + n] = this[i];\n  for (i = n - 1; i >= 0; --i)\n    r[i] = 0;\n  r.t = this.t + n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i)\n    r[i - n] = this[i];\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB), c = this.s << bs & this.DM, i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i)\n    r[i] = 0;\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var i = 0, c = 0, m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c -= a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;\n  else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0)\n    r[i] = 0;\n  for (i = 0; i < y.t; ++i)\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0)\n    r[i] = 0;\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if (\n      (r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n        x.DV\n    ) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]);\n  // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt, d2 = (1 << this.F1) / yt, e = 1 << this.F2;\n  var i = r.t, j = i - ys, t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y);\n  // \"negative\" y so we can replace sub with am later\n  while (y.t < ys)\n    y[y.t++] = 0;\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0\n      ? this.DM\n      : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) r.subTo(t, r);\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r);\n  // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3;\n  // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf;\n  // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff;\n  // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;\n  // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV;\n  // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var i = 0, c = 0, m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c += a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;\n  else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = nbi();\n\n  this.addTo(a, r);\n\n  return r;\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = nbi();\n\n  this.subTo(a, r);\n\n  return r;\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = nbi();\n\n  this.multiplyTo(a, r);\n\n  return r;\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = nbi();\n\n  this.divRemTo(a, r, null);\n\n  return r;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2)\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl +\n      ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) &\n      x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n\n  this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m) {\n  var i = e.bitLength(), k, r = nbv(1), z = new Montgomery(m);\n  if (i <= 0) return r;\n  else if (i < 18) k = 1;\n  else if (i < 48) k = 3;\n  else if (i < 144) k = 4;\n  else if (i < 768) k = 5;\n  else k = 6;\n\n  // precomputation\n  var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1, w, is1 = true, r2 = nbi(), t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;\n    else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n\n    n = k;\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);\n      else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  return z.revert(r);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/BigInteger.js","/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from 'aws-sdk';\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor({ AccessToken } = {}) {\n    // Assign object\n    this.jwtToken = AccessToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split('.')[1];\n    const expiration = JSON.parse(util.base64.decode(payload).toString('utf8'));\n    return expiration.exp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from 'aws-sdk';\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor({ IdToken } = {}) {\n    // Assign object\n    this.jwtToken = IdToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split('.')[1];\n    const expiration = JSON.parse(util.base64.decode(payload).toString('utf8'));\n    return expiration.exp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor({ RefreshToken } = {}) {\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getToken() {\n    return this.token;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from 'aws-sdk';\n\nimport BigInteger from './BigInteger';\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\nimport StorageHelper from './StorageHelper';\n\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\n\n/** @class */\nexport default class CognitoUser {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   */\n  constructor(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n\n    this.client = data.Pool.client;\n\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n  }\n\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  getSignInUserSession() {\n    return this.signInUserSession;\n  }\n\n  /**\n   * @returns {string} the user's username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {String} the authentication flow type\n   */\n  getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n\n  /**\n   * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  authenticateUser(authDetails, callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split('_')[1]);\n    const dateHelper = new DateHelper();\n\n    let serverBValue;\n    let salt;\n    const authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    if (this.authenticationFlowType === 'CUSTOM_AUTH') {\n      authParameters.CHALLENGE_NAME = 'SRP_A';\n    }\n\n    this.client.makeUnauthenticatedRequest('initiateAuth', {\n      AuthFlow: this.authenticationFlowType,\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: authDetails.getValidationData(),\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      this.username = challengeParameters.USER_ID_FOR_SRP;\n      serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      salt = new BigInteger(challengeParameters.SALT, 16);\n      this.getCachedDeviceKeyAndPassword();\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.username,\n        authDetails.getPassword(),\n        serverBValue,\n        salt);\n\n      const dateNow = dateHelper.getNowString();\n\n      const signatureString = util.crypto.hmac(hkdf, util.buffer.concat([\n        new util.Buffer(this.pool.getUserPoolId().split('_')[1], 'utf8'),\n        new util.Buffer(this.username, 'utf8'),\n        new util.Buffer(challengeParameters.SECRET_BLOCK, 'base64'),\n        new util.Buffer(dateNow, 'utf8')\n      ]), 'base64', 'sha256')\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n      if (this.deviceKey != null) {\n        challengeResponses.DEVICE_KEY = this.deviceKey;\n      }\n\n      const respondToAuthChallenge = (challenge, challengeCallback) =>\n        this.client.makeUnauthenticatedRequest('respondToAuthChallenge', challenge,\n          (errChallenge, dataChallenge) => {\n            if (errChallenge && errChallenge.code === 'ResourceNotFoundException' &&\n                errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n              challengeResponses.DEVICE_KEY = null;\n              this.deviceKey = null;\n              this.randomPassword = null;\n              this.deviceGroupKey = null;\n              this.clearCachedDeviceKeyAndPassword();\n              return respondToAuthChallenge(challenge, challengeCallback);\n            }\n            return challengeCallback(errChallenge, dataChallenge);\n          });\n\n      respondToAuthChallenge({\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) => {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        const challengeName = dataAuthenticate.ChallengeName;\n        if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.Session = dataAuthenticate.Session;\n          let userAttributes = null;\n          let rawRequiredAttributes = null;\n          const requiredAttributes = [];\n          const userAttributesPrefix = authenticationHelper\n            .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n          if (dataAuthenticate.ChallengeParameters) {\n            userAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.userAttributes);\n            rawRequiredAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.requiredAttributes);\n          }\n\n          if (rawRequiredAttributes) {\n            for (let i = 0; i < rawRequiredAttributes.length; i++) {\n              requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n            }\n          }\n          return callback.newPasswordRequired(userAttributes, requiredAttributes);\n        }\n        return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n  * PRIVATE ONLY: This is an internal only method and should not\n  * be directly called by the consumers.\n  * @param {object} dataAuthenticate authentication data\n  * @param {object} authenticationHelper helper created\n  * @param {callback} callback passed on from caller\n  * @returns {void}\n  */\n  authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    const challengeName = dataAuthenticate.ChallengeName;\n    const challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.cacheTokens();\n\n    const newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n    const deviceSecretVerifierConfig = {\n      Salt: new util.Buffer(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n      PasswordVerifier: new util.Buffer(authenticationHelper.getVerifierDevices(), 'hex').toString('base64'),\n    };\n\n    this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n    this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n    this.randomPassword = authenticationHelper.getRandomPassword();\n\n    this.client.makeUnauthenticatedRequest('confirmDevice', {\n      DeviceKey: newDeviceMetadata.DeviceKey,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n      DeviceName: navigator.userAgent,\n    }, (errConfirm, dataConfirm) => {\n      if (errConfirm) {\n        return callback.onFailure(errConfirm);\n      }\n\n      this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n      this.cacheDeviceKeyAndPassword();\n      if (dataConfirm.UserConfirmationNecessary === true) {\n        return callback.onSuccess(\n          this.signInUserSession, dataConfirm.UserConfirmationNecessary);\n      }\n      return callback.onSuccess(this.signInUserSession);\n    });\n    return undefined;\n  }\n\n  /**\n  * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n  * Pass the new password with any new user attributes to be updated.\n  * User attribute keys must be of format userAttributes.<attribute_name>.\n  * @param {string} newPassword new password for this user\n  * @param {object} requiredAttributeData map with values for all required attributes\n  * @param {object} callback Result callback map.\n  * @param {onFailure} callback.onFailure Called on any error.\n  * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n  * @param {customChallenge} callback.customChallenge Custom challenge\n  *         response required to continue.\n  * @param {authSuccess} callback.onSuccess Called on success with the new session.\n  * @returns {void}\n  */\n  completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split('_')[1]);\n    const userAttributesPrefix = authenticationHelper\n      .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n    const finalUserAttributes = {};\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach((key) => {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n    }, (errAuthenticate, dataAuthenticate) => {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n      return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   * @private\n   */\n  getDeviceResponse(callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.deviceGroupKey);\n    const dateHelper = new DateHelper();\n\n    const authParameters = {};\n\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'DEVICE_SRP_AUTH',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: authParameters,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      const serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      const salt = new BigInteger(challengeParameters.SALT, 16);\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.deviceKey,\n        this.randomPassword,\n        serverBValue,\n        salt);\n\n      const dateNow = dateHelper.getNowString();\n\n      const signatureString = util.crypto.hmac(hkdf, util.buffer.concat([\n        new util.Buffer(this.deviceGroupKey, 'utf8'),\n        new util.Buffer(this.deviceKey, 'utf8'),\n        new util.Buffer(challengeParameters.SECRET_BLOCK, 'base64'),\n        new util.Buffer(dateNow, 'utf8')\n      ]), 'base64', 'sha256')\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n\n      this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) => {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n        this.cacheTokens();\n\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n    this.client.makeUnauthenticatedRequest('confirmSignUp', {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  }\n\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challange answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendCustomChallengeAnswer(answerChallenge, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeName = data.ChallengeName;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        this.Session = data.Session;\n        return callback.customChallenge(data.ChallengeParameters);\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(data.AuthenticationResult);\n      this.cacheTokens();\n      return callback.onSuccess(this.signInUserSession);\n    });\n  }\n\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendMFACode(confirmationCode, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest('respondToAuthChallenge', {\n      ChallengeName: 'SMS_MFA',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, dataAuthenticate) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        this.getDeviceResponse(callback);\n        return undefined;\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n      this.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(this.signInUserSession);\n      }\n\n      const authenticationHelper = new AuthenticationHelper(\n        this.pool.getUserPoolId().split('_')[1]);\n      authenticationHelper.generateHashDevice(\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n      const deviceSecretVerifierConfig = {\n        Salt: new util.Buffer(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: new util.Buffer(authenticationHelper.getVerifierDevices(), 'hex').toString('base64'),\n      };\n\n      this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      this.deviceGroupKey = dataAuthenticate.AuthenticationResult\n        .NewDeviceMetadata.DeviceGroupKey;\n      this.randomPassword = authenticationHelper.getRandomPassword();\n\n      this.client.makeUnauthenticatedRequest('confirmDevice', {\n        DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: navigator.userAgent,\n      }, (errConfirm, dataConfirm) => {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n        this.cacheDeviceKeyAndPassword();\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(\n            this.signInUserSession,\n            dataConfirm.UserConfirmationNecessary);\n        }\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  changePassword(oldUserPassword, newUserPassword, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('changePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to enable MFA for himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    const mfaOptions = [];\n    const mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number',\n    };\n    mfaOptions.push(mfaEnabled);\n\n    this.client.makeUnauthenticatedRequest('setUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to disable MFA for himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    const mfaOptions = [];\n\n    this.client.makeUnauthenticatedRequest('setUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n\n  /**\n   * This is used by an authenticated user to delete himself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteUser(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('deleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      this.clearCachedTokens();\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  updateAttributes(attributes, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('updateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n  getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('getUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, userData) => {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const attributeList = [];\n\n      for (let i = 0; i < userData.UserAttributes.length; i++) {\n        const attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value,\n        };\n        const userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get the MFAOptions\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */\n  getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('getUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, userData) => {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.makeUnauthenticatedRequest('deleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  resendConfirmationCode(callback) {\n    this.client.makeUnauthenticatedRequest('resendConfirmationCode', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, err => {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  }\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n  getSession(callback) {\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const idTokenKey = `${keyPrefix}.idToken`;\n    const accessTokenKey = `${keyPrefix}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.refreshToken`;\n\n    const storage = new StorageHelper().getStorage();\n\n    if (storage.getItem(idTokenKey)) {\n      const idToken = new CognitoIdToken({\n        IdToken: storage.getItem(idTokenKey),\n      });\n      const accessToken = new CognitoAccessToken({\n        AccessToken: storage.getItem(accessTokenKey),\n      });\n      const refreshToken = new CognitoRefreshToken({\n        RefreshToken: storage.getItem(refreshTokenKey),\n      });\n\n      const sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n      };\n      const cachedSession = new CognitoUserSession(sessionData);\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (refreshToken.getToken() == null) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback);\n    }\n    return undefined;\n  }\n\n\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n  refreshSession(refreshToken, callback) {\n    const authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n    const storage = new StorageHelper().getStorage();\n\n    if (storage.getItem(lastUserKey)) {\n      this.username = storage.getItem(lastUserKey);\n      const deviceKeyKey = `${keyPrefix}.${this.username}.deviceKey`;\n      this.deviceKey = storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest('initiateAuth', {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n    }, (err, authResult) => {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          this.clearCachedTokens();\n        }\n        return callback(err, null);\n      }\n      if (authResult) {\n        const authenticationResult = authResult.AuthenticationResult;\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n        this.signInUserSession = this.getCognitoUserSession(authenticationResult);\n        this.cacheTokens();\n        return callback(null, this.signInUserSession);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  cacheTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    const storage = new StorageHelper().getStorage();\n\n    storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    storage.setItem(lastUserKey, this.username);\n  }\n\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  cacheDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = new StorageHelper().getStorage();\n\n    storage.setItem(deviceKeyKey, this.deviceKey);\n    storage.setItem(randomPasswordKey, this.randomPassword);\n    storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  getCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = new StorageHelper().getStorage();\n\n    if (storage.getItem(deviceKeyKey)) {\n      this.deviceKey = storage.getItem(deviceKeyKey);\n      this.randomPassword = storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = storage.getItem(deviceGroupKeyKey);\n    }\n  }\n\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  clearCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    const storage = new StorageHelper().getStorage();\n\n    storage.removeItem(deviceKeyKey);\n    storage.removeItem(randomPasswordKey);\n    storage.removeItem(deviceGroupKeyKey);\n  }\n\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  clearCachedTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    const storage = new StorageHelper().getStorage();\n\n    storage.removeItem(idTokenKey);\n    storage.removeItem(accessTokenKey);\n    storage.removeItem(refreshTokenKey);\n    storage.removeItem(lastUserKey);\n  }\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  getCognitoUserSession(authResult) {\n    const idToken = new CognitoIdToken(authResult);\n    const accessToken = new CognitoAccessToken(authResult);\n    const refreshToken = new CognitoRefreshToken(authResult);\n\n    const sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken,\n    };\n\n    return new CognitoUserSession(sessionData);\n  }\n\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess<void>?} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgotPassword(callback) {\n    this.client.makeUnauthenticatedRequest('forgotPassword', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  confirmPassword(confirmationCode, newPassword, callback) {\n    this.client.makeUnauthenticatedRequest('confirmForgotPassword', {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @returns {void}\n   */\n  getAttributeVerificationCode(attributeName, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('getUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.inputVerificationCode(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('verifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('getDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('forgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey,\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgetDevice(callback) {\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: result => {\n        this.deviceKey = null;\n        this.deviceGroupKey = null;\n        this.randomPassword = null;\n        this.clearCachedDeviceKeyAndPassword();\n        return callback.onSuccess(result);\n      },\n    });\n  }\n\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered',\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('updateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered',\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('listDevices', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit,\n      PaginationToken: paginationToken,\n    }, (err, data) => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  globalSignOut(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.makeUnauthenticatedRequest('globalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err => {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      this.clearCachedTokens();\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  signOut() {\n    this.signInUserSession = null;\n    this.clearCachedTokens();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUser.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserAttribute {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  constructor({ Name, Value } = {}) {\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n\n  /**\n   * @returns {string} the record's value.\n   */\n  getValue() {\n    return this.Value;\n  }\n\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setValue(value) {\n    this.Value = value;\n    return this;\n  }\n\n  /**\n   * @returns {string} the record's name.\n   */\n  getName() {\n    return this.Name;\n  }\n\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setName(name) {\n    this.Name = name;\n    return this;\n  }\n\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserAttribute.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserSession {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {string} IdToken The session's Id token.\n   * @param {string=} RefreshToken The session's refresh token.\n   * @param {string} AccessToken The session's access token.\n   */\n  constructor({ IdToken, RefreshToken, AccessToken } = {}) {\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n\n    return now < this.accessToken.getExpiration() && now < this.idToken.getExpiration();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserSession.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst monthNames =\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet dataMemory = {};\n\n/** @class */\nclass MemoryStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n/** @class */\nexport default class StorageHelper {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  constructor() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  getStorage() {\n    return this.storageWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class AuthenticationDetails {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   */\n  constructor(data) {\n    const { ValidationData, Username, Password } = data || {};\n    this.validationData = ValidationData || [];\n    this.username = Username;\n    this.password = Password;\n  }\n\n  /**\n   * @returns {string} the record's username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {string} the record's password\n   */\n  getPassword() {\n    return this.password;\n  }\n\n  /**\n   * @returns {Array} the record's validationData\n   */\n  getValidationData() {\n    return this.validationData;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthenticationDetails.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CognitoIdentityServiceProvider } from 'aws-sdk';\n\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n\n/** @class */\nexport default class CognitoUserPool {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   */\n  constructor(data) {\n    const { UserPoolId, ClientId } = data || {};\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    const region = UserPoolId.split('_')[0];\n\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n\n    this.client = new CognitoIdentityServiceProvider({ apiVersion: '2016-04-19', region });\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n  getUserPoolId() {\n    return this.userPoolId;\n  }\n\n  /**\n   * @returns {string} the client id\n   */\n  getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @returns {void}\n   */\n  signUp(username, password, userAttributes, validationData, callback) {\n    this.client.makeUnauthenticatedRequest('signUp', {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n    }, (err, data) => {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const cognitoUser = {\n        Username: username,\n        Pool: this,\n      };\n\n      const returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n      };\n\n      return callback(null, returnData);\n    });\n  }\n\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  getCurrentUser() {\n    const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n    const storage = new StorageHelper().getStorage();\n\n    const lastAuthUser = storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      const cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n      };\n\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserPool.js","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { default as AuthenticationDetails } from './AuthenticationDetails';\nexport { default as AuthenticationHelper } from './AuthenticationHelper';\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\nexport { default as CognitoIdToken } from './CognitoIdToken';\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\nexport { default as CognitoUser } from './CognitoUser';\nexport { default as CognitoUserAttribute } from './CognitoUserAttribute';\nexport { default as CognitoUserPool } from './CognitoUserPool';\nexport { default as CognitoUserSession } from './CognitoUserSession';\nexport { default as DateHelper } from './DateHelper';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}